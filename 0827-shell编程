1.shell脚本
需要的命令保存在文本中，然后执行它
每天晚上9：30 打包/data目录下所有文件，复制到192.169.7.3(文件服务器)的/opt下
shell脚本=若干命令+脚本的基本格式+特定语法
2.什么时候使用脚本
重复、复杂的工作通过命令写成脚本，以后通过脚本就可以完成任务
3.怎样学习
a.记命令
b.掌握标准格式
c.基本语法
	变量定义
	条件判断
	分支
	循环
	函数
	传惨
	sed
	awk
4.脚本的执行
a.通过绝对路径执行
通过绝对路径执行脚本文件需要注意，该文件必须有执行权限才能通过该方式执行
修改权限chmod a+x 文件
bash: /home/heygor/0827/shell/day-01.sh: 权限不够
chmod a+x /home/heygor/0827/shell/day-01.sh 
/home/heygor/0827/shell/day-01.sh
b.通过相对路径执行
通过相对路径ahing脚本文件也一样，必须有执行权限才能执行
 ./day-02.sh 
c.通过bash或者sh执行
通过bash或者sh执行不需要提前设置文件权限，直接使用就可以
sh day-03.sh
bash day-03.sh
5.变量的定义和使用
a.变量的定义
变量名字和变量值都是自定义的，用户可以进行控制修改
a1.命名规则
	变量名可以有字母、数字、下划线组成，必须字母和下划线开头
	变量名产读不能超过255
	变量名在有效范围必须唯一
	在脚本中，某人类型都是字符串
a2.变量存储类型
	字符串类型，赋值时候单、双引号都可以
	整型
	浮点型
	日期型
a3.变量定义
	变量名=变量值
	注意：等号左右不能有空格
	a=10
	b=20
	c='heygor'
b.变量的调用
变量的调用通常作为输出，在变量名字前面增加$,进行性打印即可
	a=20
	echo $a
	a='heygor'
	echo $a
d.变量的查看
可以查询当前系统运行的所有变量，包括系统变量和用户变量
	set
e.变量的删除
unset x	 注意：unset并不是删除变量里面的值，而是删除变量，变量名前面不需要加$
	unset a
6.定义变量
定义变量通常2种方式
a.系统变量
系统变量可以用于定义shell的运行环境，环境变量可以在配置文件中进行定义和修改，也可以在命令行中设置，但是在命令行中设置重启终端后就会失效，最好在配置文件中进行修改(/etc/profile;~/.bashrc;~/.bash_profile),将环境变量放在配置文件中，每次登陆时后这些变量进行初始化
在.bashrc中最后一行添加 date | awk -F " " '{print $2,$3}'，打开新终端后，直接显示日期
b.本地变量
在用户当前的shell生存其脚本使用
测试：打开终端设置变量输出，打开另外一个终端，显示变量输出
7.变量的赋值
1.直接赋值
等号左侧为变量名字，右侧为变量的值
a=20
a='heygor'
2.间接赋值
`` 反斜线代表先执行斜线中命令，然后把执行结果赋予变量
name=`hostname`
echo $name
ip=`ifconfig |grep inet`
echo $ip
3.交互赋值
read命令可以接受间哦按输入，并且赋值给变量
read -p "your name is : " username
echo $username
7.变量的位置参数进行赋值
通常脚本后面跟的第一个参数为$1,第二个参数为$2,以此类推
修改vim day-05.sh
findpath="$1"
find $findpath -name day-05.sh
执行
./day06 /home/heygor

修改vim day-06.sh
echo "第一个参数是 $1"
echo "第二个参数是 $2"
echo "第三个参数是 $3"

8.变量的运算
a.通过let方式
a=100
b=30
let c=a+b
echo $c
b.通过$()方式
a=20
b=30
c=$((a+b))
c.通过``方式
``先执行内部命令
now=`date | awk -F " " '{print $5}'`
echo $now
9.条件判断
shell编程中test命令，可以通过man test查看条件判断语法
条件判断在脚本中以if关键字开头fi关键字结尾，test等价与[]
a.单分支
if [ 条件 ];then
	执行语句
fi
b.双分支
if [ 条件 ];then
	执行语句
eles
	执行语句
fi
c.多分支
if [ 条件 ];then
	执行语句
elif [条件];then
	执行语句
...
else
	执行语句
fi
d.条件判断常见参数
	-f 是否存在(文件)
		test -f /etc/passwd
		如果条件成立，返回码是$?=0
		[ -f /etc/passwd ]
		[ -f /etc ]
	-e 不管是文件还是目录存在条件就成立
	-n 字符串为非空就是成立
	-z 字符床长度为0就成里
	字符串的对比 =   ！=，不能用于数值大小的判断
	-eq 等于
	-ne 不等于
	-lt 小于
	-gt 大于
	-gte大于等于
	-lte 小于等于
	逻辑判断符号
	-a and(逻辑与) 同时满足条件
	-o or(逻辑或)  满足一个条件即可
	
#read -p "your name is " user
#echo $user
#if [ $user='heygor' ];then
#       echo 'creazy!!!!'
#fi
if [ -f /etc/passwd1 ];then
        echo 'file exxists!'
else
        echo 'mu zhao dao'
fi

ls /etc/dadsadsads
if [ $? = "0" ];then
        echo 'its your hostname'
else
        echo 'WTF'
fi
10.循环
a.for循环
for循环就是遍历，访问序列中每一个元素
for i in 1 2 3 4
do
        echo "no.$i"
done
echo "finished"

for i in `seq 10`
do
        useradd usera$i
done
for ((i=1;i<=10;i++))
do
        sudo userdel -r heyor$i
done
判断局域网中哪些IP可以用，哪些不可以用(写脚本)














