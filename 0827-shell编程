1.shell脚本
需要的命令保存在文本中，然后执行它
每天晚上9：30 打包/data目录下所有文件，复制到192.169.7.3(文件服务器)的/opt下
shell脚本=若干命令+脚本的基本格式+特定语法
2.什么时候使用脚本
重复、复杂的工作通过命令写成脚本，以后通过脚本就可以完成任务
3.怎样学习
a.记命令
b.掌握标准格式
c.基本语法
	变量定义
	条件判断
	分支
	循环
	函数
	传惨
	sed
	awk
4.脚本的执行
a.通过绝对路径执行
通过绝对路径执行脚本文件需要注意，该文件必须有执行权限才能通过该方式执行
修改权限chmod a+x 文件
bash: /home/heygor/0827/shell/day-01.sh: 权限不够
chmod a+x /home/heygor/0827/shell/day-01.sh 
/home/heygor/0827/shell/day-01.sh
b.通过相对路径执行
通过相对路径ahing脚本文件也一样，必须有执行权限才能执行
 ./day-02.sh 
c.通过bash或者sh执行
通过bash或者sh执行不需要提前设置文件权限，直接使用就可以
sh day-03.sh
bash day-03.sh
5.变量的定义和使用
a.变量的定义
变量名字和变量值都是自定义的，用户可以进行控制修改
a1.命名规则
	变量名可以有字母、数字、下划线组成，必须字母和下划线开头
	变量名产读不能超过255
	变量名在有效范围必须唯一
	在脚本中，某人类型都是字符串
a2.变量存储类型
	字符串类型，赋值时候单、双引号都可以
	整型
	浮点型
	日期型
a3.变量定义
	变量名=变量值
	注意：等号左右不能有空格
	a=10
	b=20
	c='heygor'
b.变量的调用
变量的调用通常作为输出，在变量名字前面增加$,进行性打印即可
	a=20
	echo $a
	a='heygor'
	echo $a
d.变量的查看
可以查询当前系统运行的所有变量，包括系统变量和用户变量
	set
e.变量的删除
unset x	 注意：unset并不是删除变量里面的值，而是删除变量，变量名前面不需要加$
	unset a
6.定义变量
定义变量通常2种方式
a.系统变量
系统变量可以用于定义shell的运行环境，环境变量可以在配置文件中进行定义和修改，也可以在命令行中设置，但是在命令行中设置重启终端后就会失效，最好在配置文件中进行修改(/etc/profile;~/.bashrc;~/.bash_profile),将环境变量放在配置文件中，每次登陆时后这些变量进行初始化
在.bashrc中最后一行添加 date | awk -F " " '{print $2,$3}'，打开新终端后，直接显示日期
b.本地变量
在用户当前的shell生存其脚本使用
测试：打开终端设置变量输出，打开另外一个终端，显示变量输出
7.变量的赋值
1.直接赋值
等号左侧为变量名字，右侧为变量的值
a=20
a='heygor'
2.间接赋值
`` 反斜线代表先执行斜线中命令，然后把执行结果赋予变量
name=`hostname`
echo $name
ip=`ifconfig |grep inet`
echo $ip
3.交互赋值
read命令可以接受间哦按输入，并且赋值给变量
read -p "your name is : " username
echo $username











